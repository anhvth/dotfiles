CONFIG_FILE=".cache/sync_app_info.txt"

setup() {
    echo -n "Enter local directory (e.g., \$(pwd)): "
    read input_dir
    CURDIR=$(realpath $input_dir"/")
    
    echo -n "Enter remote user and host (e.g., user@hostname): "
    read REMOTE_USER_HOST
    
    echo -n "Enter remote directory (e.g., /workdir/gitprojects/ColBERT): "
    read input_dir
    REMOTE_DIR=$input_dir
    
    mkdir -p "$(dirname $CONFIG_FILE)"
    echo "SYNC_APP_CURDIR=$CURDIR" > $CONFIG_FILE
    echo "SYNC_APP_REMOTE_USER_HOST=$REMOTE_USER_HOST" >> $CONFIG_FILE
    echo "SYNC_APP_REMOTE_DIR=$REMOTE_DIR" >> $CONFIG_FILE

    echo "Setup completed and information saved!"
}

sync_func() {
    if [ ! -f "$CONFIG_FILE" ]; then
        echo "No setup detected. Run './sync_app.sh setup' first."
        exit 1
    fi
    source $CONFIG_FILE
    alias rs="rsync -avP --filter=':- .gitignore'"
    if [[ $1 == "-r" ]]; then
        RSYNC_ARGS=("${SYNC_APP_REMOTE_USER_HOST}:${SYNC_APP_REMOTE_DIR}/" "$SYNC_APP_CURDIR/")
    else
        RSYNC_ARGS=("$SYNC_APP_CURDIR/" "${SYNC_APP_REMOTE_USER_HOST}:${SYNC_APP_REMOTE_DIR}/")
    fi
    # Check if delete flag is provided
    if [[ $1 == "--delete" ]]; then
        # Dry run to list files to be deleted
        echo "Files to be deleted:"
        rsync -avP --filter=':- .gitignore' ${RSYNC_ARGS[@]} --dry-run --delete
        echo "\nDo you want to continue with delete? (y/n): "
        read confirm
        if [[ $confirm == "y" || $confirm == "Y" ]]; then
            RSYNC_ARGS+=("--delete")
        else
            echo "Abort!"
            exit 1
        fi
    fi

    cmd="rs ${RSYNC_ARGS[@]}"
    eval $cmd
    echo $cmd
}
sync_loop() {
    # Monitor changes in SYNC_APP_CURDIR with fswatch and run sync_func upon change
    echo "Watching changes in $SYNC_APP_CURDIR. Press [CTRL+C] to stop."
    fswatch -o "$SYNC_APP_CURDIR" | while read -r event; do
        sync_func
    done
}

case $1 in
    "setup")
        setup
        ;;
    "sync")
        shift
        sync_func "$@"
        ;;
    "ssh")
        echo "Enter remote"
        source $CONFIG_FILE
        ssh $SYNC_APP_REMOTE_USER_HOST -t "cd $SYNC_APP_REMOTE_DIR && zsh" 
        ;;
    "sync-loop")
        source $CONFIG_FILE
        sync_loop
        ;;
    *)
        echo "Usage: ./sync_app.sh [setup|sync [--delete]]"
        exit 1
        ;;
esac